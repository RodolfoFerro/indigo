---
title: "Intro a Python üêç (Semana IQ 2019, UG)"
layout: post
date: 2019-04-04 22:00
published: true
image: 
headerImage: false
tag:
- Python
- Workshop
- Intro
category: blog
author: rodferro
description: Charla y taller de introducci√≥n a Python para la Semana de la Ingenier√≠a Qu√≠mica 2019, Univeridad de Guanajuato.
---

# Semana de la Ingenier√≠a Qu√≠mica 2019, Universidad de Guanajuato

En esta charla-taller se abordar√°n 2 temas principales: 

1. La IQ y su relaci√≥n con la programaci√≥n _(para con ello llegar al siguiente punto)_
2. Taller de introducci√≥n a Python

## 1. Charla ‚Äì _Programaci√≥n: Introducci√≥n y aplicaci√≥n_

Aprende:
  - La importancia del c√≥mputo en la actualidad
  - Ejemplos de aplicaciones reales
  - Ejemplos sencillos de c√°lculo con programaci√≥n
  - Introducci√≥n a Python

**Slides:** 

<iframe src="https://docs.google.com/presentation/d/e/2PACX-1vQh2D114DcIK8DcqO8pMZhWbq5-qKVGhYCbPLDt0oruaiJQ9FbmCnhZMjDy_nUQ-uLPuTdOLTOF0ydy/embed?start=false&loop=false&delayms=3000" frameborder="0" width="960" height="569" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe>

### Ejemplos de c√°lculos vistos con Python:

A continuaci√≥n a√±ado el c√≥digo de los ejemplos vistos en la charla (de c√°lculos de derivadas y una EDO sencilla). De cualquier manera el c√≥digo estar√° disponible en un _Notebook_ para correr en Google Colab dentro de la siguiente secci√≥n.

#### Derivadas con c√°lculo simb√≥lico
```python
import sympy as sp

x = sp.Symbol('x')

def f_1(x):
    return 3*x**2+1

def f_2(x):
    return sp.exp(x**2)

print(sp.diff(f_1(x), x))
# Output: 6*x

print(sp.diff(f_2(x), x, 3))
# Output: 4*x*(2*x**2 + 3)*exp(x**2)
```

#### Evaluaci√≥n de una derivada
```python
from scipy.misc import derivative

derivative(f_1, 4)
# Output: 24.0
```

#### Resolviendo una ecuaci√≥n diferencial ordinaria (muy sencilla)
Resuleve:

$$\dfrac{dy}{dt} = ye^{-t}$$

para $t = 6$ y $y_0 = 1$.

```python
import numpy as np
from scipy.integrate import odeint

def f(y, t):
    dydt = y*np.exp(-t)
    return dydt

y_0 = 1
t = np.linspace(0, 6, 100)

y = odeint(f, y_0, t)
y
# Output: 
# array([[1.        ],
#      [1.06056955],
#      [1.12092472],
#      ...,
#      [2.71068623],
#      [2.71113231],
#      [2.71155222]])
```

Grafica $y(t)$.

```python
import matplotlib.pyplot as plt

plt.plot(t, y)
plt.xlabel("Time (s)")
plt.ylabel("y(t)")
# Output: <matplotlib object>
```
![ODE plot](../assets/posts/SemanaIQ19_plot.png)

## 2. Taller de introducci√≥n a Python

Aprende lo b√°sico de Python, un lenguaje de programaci√≥n muy potente que sirve para hacer p√°ginas web, ciencia de datos, bots y m√°s.

Para acceder al _Notebook_ desarrollado durante el taller, puedes hacerlo directamente a continuaci√≥n de manera embebida. Si deseas ejecutar el c√≥digo en la nube, pulsa el siguiente bot√≥n: 
  
<center>
  <a href="https://colab.research.google.com/gist/RodolfoFerro/4cf23e74bd1ddc79593c7d64b5c064aa/semaniq2019.ipynb" target="_parent">
    <img src="https://camo.githubusercontent.com/52feade06f2fecbf006889a904d221e6a730c194/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667" alt="Open In Colab" data-canonical-src="https://colab.research.google.com/assets/colab-badge.svg">
  </a>
</center>
<br>

<script src="https://gist.github.com/RodolfoFerro/4cf23e74bd1ddc79593c7d64b5c064aa.js"></script>

***

### SOBRE EL USO DE INFORMACI√ìN TOTAL O PARCIAL: üîê
* Estos documentos fueron originalmente creados por el autor.
* Cualquier uso de estos documentos o sus contenidos est√°n permitidos acorde a lo establecido al autor.
* Para cualquier aclaraci√≥n o mayor informaci√≥n, puedes contactar al autor: https://rodolfoferro.xyz/

**Copyright (c) 2019 Rodolfo Ferro**
